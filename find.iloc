start:  in      "In: "              => r_x
        loadI   0                   => r_i
        loadI   @alength            => r_len
for:    cmp_LT  r_i, r_len          => r_cmp
        cbr     r_cmp               -> body,end
body:   i2i     r_i                 => r_a      // compute address of a[i]
        multI   r_a,4               => r_a      // multiply by size of int
        addI    r_a,@a              => r_a      // add a's base offset
        loadAO  r_arp,r_a           => r_ai     // r_ai <- a[i]
if:     cmp_EQ  r_x, r_ai           => r_cmpif
        cbr     r_cmpif             -> then,endif
then:   jumpI                       -> end
endif:  addI    r_i, 1              => r_i
        jumpI                       -> for
end:    out     "Index: ", r_i