x  <- 0
y  <- 4
z  <- 8
n  <- 12
n1 <- 16

start:  loadI   1           => r_1
        storeAI r_1         => r_arp,@x // int x = 1;
        storeAI r_1         => r_arp,@y // int y = 1;
        storeAI r_1         => r_arp,@z // int z = 1;
        storeAI r_1         => r_arp,@n1
        loadI   @n          => r_1
        storeAI r_1         => r_arp,@n
        loadAI  r_arp,@n    => r_n
        loadAI  r_arp,@n1   => r_1
while:  cmp_GT  r_n,r_1     => r_cmp
        cbr     r_cmp       -> body,end
body:   loadAI  r_arp,@x    => r_x
        loadAI  r_arp,@y    => r_y
        add     r_x,r_y     => r_z
        storeAI r_y         => r_arp,@x
        storeAI r_z         => r_arp,@y
        storeAI r_z         => r_arp,@z
        subI    r_n, 1      => r_n      // n = n - 1;
        jumpI               -> while
end:    loadAI  r_arp,@z    => r_z
        out     "Return: ", r_z